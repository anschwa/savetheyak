<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Kill The Yak - Recent Guides</title>
  <id>http://localhost/feed/recent.atom</id>
  <updated>2013-07-26T09:00:00Z</updated>
  <link href="http://localhost/" />
  <link href="http://localhost/feed/recent.atom" rel="self" />
  <generator>Werkzeug</generator>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Use PostgreSQL with Flask or Django</title>
    <id>http://killtheyak.com/use-postgresql-with-django-flask</id>
    <updated>2013-07-26T09:00:00Z</updated>
    <published>2013-07-26T09:00:00Z</published>
    <link href="http://killtheyak.com/use-postgresql-with-django-flask" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">A quick guide to get started using Postgres with a Flask or Django app.</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Schedule jobs in MacOSX (a guide to launchd)</title>
    <id>http://killtheyak.com/schedule-jobs-launchd</id>
    <updated>2013-07-17T00:15:20Z</updated>
    <published>2013-07-17T00:15:20Z</published>
    <link href="http://killtheyak.com/schedule-jobs-launchd" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">As of MacOSX 10.4, cron became deprecated in favor of launchd. The biggest advantage of launchd is that it does not assume that your computer is always on (as cron does). Therefore, if your Mac is asleep when a scheduled job was supposed to run, it will automatically run when your Mac is awake.</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Use Coffeescript in a Django app</title>
    <id>http://killtheyak.com/use-coffeescript-in-django</id>
    <updated>2013-07-14T20:00:00Z</updated>
    <published>2013-07-14T20:00:00Z</published>
    <link href="http://killtheyak.com/use-coffeescript-in-django" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">Using Coffeescript in Django is much simpler than you might think.</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Install Coffeescript</title>
    <id>http://killtheyak.com/install-coffeescript</id>
    <updated>2013-07-14T19:36:00Z</updated>
    <published>2013-07-14T19:36:00Z</published>
    <link href="http://killtheyak.com/install-coffeescript" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">http://killtheyak.com/install-coffeescript</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Add color to my Terminal</title>
    <id>http://killtheyak.com/add-color-to-terminal</id>
    <updated>2013-07-14T17:06:00Z</updated>
    <published>2013-07-14T17:06:00Z</published>
    <link href="http://killtheyak.com/add-color-to-terminal" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">Let's make our `ls` and `grep` colorful.</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Install and configure Git</title>
    <id>http://killtheyak.com/install-git</id>
    <updated>2013-07-14T16:46:00Z</updated>
    <published>2013-07-14T16:46:00Z</published>
    <link href="http://killtheyak.com/install-git" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">http://killtheyak.com/install-git</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Install a scientific Python environment (numpy + scipy + matplotlib) on MacOSX without Enthought</title>
    <id>http://killtheyak.com/scientific-python</id>
    <updated>2013-07-14T13:30:00Z</updated>
    <published>2013-07-14T13:30:00Z</published>
    <link href="http://killtheyak.com/scientific-python" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">Python has many excellent libraries for scientific computing. Unfortunately, installing these libraries can be a yak shaving nightmare. One solution is to download the Enthought Python Distribution, a Python distribution that comes bundled with a large number of packages precompiled. While the EPD may be the best solution to get off the ground with scientific computing in as little time as possible, problems may arise when (1) you want to use python outside of the EPD environment, possibly with diffent Python versions and (2) you want to keep your scientific environment in a virtualenv.</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Install the latest Mac C and C++ compilers</title>
    <id>http://killtheyak.com/install-mac-xcode-compilers</id>
    <updated>2013-07-14T13:00:00Z</updated>
    <published>2013-07-14T13:00:00Z</published>
    <link href="http://killtheyak.com/install-mac-xcode-compilers" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">http://killtheyak.com/install-mac-xcode-compilers</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Use virtualenv + virtualenvwrapper with Python</title>
    <id>http://killtheyak.com/use-virtualenvwrapper</id>
    <updated>2013-07-14T10:00:00Z</updated>
    <published>2013-07-14T10:00:00Z</published>
    <link href="http://killtheyak.com/use-virtualenvwrapper" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">Virtualenv allows you to make isolated working copies of Python so that you can work on a specific project without affecting other projects. Virtualenvwrapper provides commands that make it simple to create and manage your virtual environments.</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Use Celery in Django with a Redis backend</title>
    <id>http://killtheyak.com/django-celery-redis</id>
    <updated>2013-07-13T00:00:00Z</updated>
    <published>2013-07-13T00:00:00Z</published>
    <link href="http://killtheyak.com/django-celery-redis" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">Celery is a distributed task queue for Python that allows you to run computationally expensive code asynchronously. Here's how to integrate Celery in a Django project, using Redis for the backend service.</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Install Python 2 and/or 3</title>
    <id>http://killtheyak.com/install-python</id>
    <updated>2013-07-13T00:00:00Z</updated>
    <published>2013-07-13T00:00:00Z</published>
    <link href="http://killtheyak.com/install-python" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">http://killtheyak.com/install-python</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Install Homebrew</title>
    <id>http://killtheyak.com/install-homebrew</id>
    <updated>2013-07-13T00:00:00Z</updated>
    <published>2013-07-13T00:00:00Z</published>
    <link href="http://killtheyak.com/install-homebrew" />
    <author>
      <name>Anonymous</name>
    </author>
    <content type="html">Homebrew's tagline is &quot;the missing package manager for OS X&quot;. It is by far the best package manager for Mac available and will save you hours of yak-shaving.</content>
  </entry>
</feed>
