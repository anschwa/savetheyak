<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Kill The Yak - Recent Guides</title>
  <id>http://localhost/feed/recent.atom</id>
  <updated>2013-07-14T19:36:00Z</updated>
  <link href="http://localhost/" />
  <link href="http://localhost/feed/recent.atom" rel="self" />
  <generator>Werkzeug</generator>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Install Coffeescript</title>
    <id>http://killtheyak.com/install-coffeescript</id>
    <updated>2013-07-14T19:36:00Z</updated>
    <published>2013-07-14T19:36:00Z</published>
    <link href="http://killtheyak.com/install-coffeescript" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# Mac-specific instructions&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Install node&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew update 
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install node
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add the node directory to your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# In you shell profile (.bash_profile, .zshrc, etc.), add this line&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/share/npm/bin:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# Install coffee (notice the dash)&lt;/span&gt;
npm install -g coffee-script
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You now have Coffeescript installed.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# To compile a file&lt;/span&gt;
coffee -c cupofjoe.coffee
&lt;span class=&quot;c&quot;&gt;# Watch mode--compile a file whenever it is changed&lt;/span&gt;
coffee -cw cupofjoe.coffee
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;See also:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://coffeescript.org/&quot;&gt;Coffeescript.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Add color to my Terminal</title>
    <id>http://killtheyak.com/add-color-to-terminal</id>
    <updated>2013-07-14T17:06:00Z</updated>
    <published>2013-07-14T17:06:00Z</published>
    <link href="http://killtheyak.com/add-color-to-terminal" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">&lt;h2&gt;Bash&lt;/h2&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# If you&amp;#39;re using the bash shell, add the following to your &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ~/.bash_profile file.&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# ~/.bash_profile&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Colorful ls and grep&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CLICOLOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GREP_OPTIONS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;--color=auto&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;`brew --prefix grc`/etc/grc.bashrc&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Zsh&lt;/h2&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# Another simple option is to use oh-my-zsh which comes with&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# many different themes out of the box, as well as the added &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# functionality of the zsh shell&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Check out the project here: https://github.com/robbyrussell/oh-my-zsh&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Install zsh like so:&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then change your &lt;code&gt;ZSH_THEME&lt;/code&gt; setting in &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# ~/.zshrc&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;ZSH_THEME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;nanotech&amp;quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Available themes here: https://github.com/robbyrussell/oh-my-zsh/wiki/themes&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Install and configure Git</title>
    <id>http://killtheyak.com/install-git</id>
    <updated>2013-07-14T16:46:00Z</updated>
    <published>2013-07-14T16:46:00Z</published>
    <link href="http://killtheyak.com/install-git" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# MacOSX-specific instructions&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew update
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install git
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# If you get an error:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# `Warning: /usr/bin occurs before /usr/local/bin`&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Then add the following to your shell profile (.bash_profile, .zshrc, etc.)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/usr/local/bin:/usr/local/sbin:~/bin:$PATH&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# Make sure you are using the right git binary&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;which git
&lt;span class=&quot;c&quot;&gt;# should be &amp;quot;/usr/local/bin/git&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# Configure git with your name and email&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config --global user.name &lt;span class=&quot;s2&quot;&gt;&amp;quot;Django Reinhardt&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config --global user.email &lt;span class=&quot;s2&quot;&gt;&amp;quot;man_with_guitar@hotmail.com&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Install a scientific Python environment (numpy + scipy + matplotlib) on MacOSX without Enthought</title>
    <id>http://killtheyak.com/scientific-python</id>
    <updated>2013-07-14T13:30:00Z</updated>
    <published>2013-07-14T13:30:00Z</published>
    <link href="http://killtheyak.com/scientific-python" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">&lt;h2&gt;Optional (but recommended) first step: Create a new virtual environment&lt;/h2&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# If you&amp;#39;re using virtualenvwrapper&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkvirtualenv science
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;workon science
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Numpy, Scipy, and Matplotlib&lt;/h2&gt;
&lt;p&gt;Install a fortran compiler and Freetype.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew update
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install gfortran freetype
&lt;span class=&quot;c&quot;&gt;# Remember to follow any instructions that show up after each install&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# To display the instructions again, run `brew info gfortran` or `brew info freetype`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install the Python packages.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# Order matters!&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install numpy
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install scipy
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install matplotlib
&lt;span class=&quot;c&quot;&gt;# Optional: install ipython&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install ipython
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If everything works, you should be able to &lt;code&gt;import pylab&lt;/code&gt;, which will bring numpy, scipy, and matplotlib functionality all in one go.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# Check that everything works&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python
&amp;gt;&amp;gt;&amp;gt; import pylab
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If all you need is numpy, scipy, and matplotlib, you're done!&lt;/p&gt;
&lt;h2&gt;Bonus: Install the rest of the EPD packages&lt;/h2&gt;
&lt;p&gt;If you want to install more of the libraries included with EPD, you can try making a &lt;code&gt;requirements.txt&lt;/code&gt; file containing the following:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# requirements.txt&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# This includes all the packages bundled with EPD-Free&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Feel free to add/remove any items&lt;/span&gt;
appinst&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2.1.1
apptools&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4.1.0
casuarius&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.0
chaco&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4.2.0
cloud&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2.4.6
configobj&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4.7.2
distribute&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;.6.26
&lt;span class=&quot;nb&quot;&gt;enable&lt;/span&gt;&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4.2.0
enaml&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.2.0
enstaller&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4.5.1
etsproxy&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.1.1
freetype&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2.4.4
ipython&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.12.1
jinja2&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2.6
libjpeg&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;7.0
libpng&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;7.0
matplotlib&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.1.0
nose&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.1.2
numpy&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.6.1
PIL&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.1.7
ply&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3.4
pyaudio&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.2.4
pyface&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4.2.0
pyglet&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.1.4
pygments&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.4
python_dateutil&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.5
pytz
pyzmq&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2.1.11
scipy&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.74
tornado&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2.2
traits&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4.2.0
traitsui&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4.2.0
wxPython&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2.8.10
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then run:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install -r -U requirements.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;NOTE: This step has not been verified. It is possible that some of the packages have other non-Python dependencies that need to be installed first.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.enthought.com/products/epd/&quot;&gt;Enthought Python Distribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.lowindata.com/2013/installing-scientific-python-on-mac-os-x/&quot;&gt;Installing scientific Python on MacOS X - Lowin Data Company&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Install the latest Mac C and C++ compilers</title>
    <id>http://killtheyak.com/install-mac-xcode-compilers</id>
    <updated>2013-07-14T13:00:00Z</updated>
    <published>2013-07-14T13:00:00Z</published>
    <link href="http://killtheyak.com/install-mac-xcode-compilers" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">&lt;p&gt;First, install Xcode.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# Get the latest version of Xcode from the Mac App Store&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Here: https://itunes.apple.com/us/app/xcode/id497799835?mt=12&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Open Xcode, then open the Preferences.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# Open Xcode, then press `Command + ,` to open preferences&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install Command line tools.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# Click `Downloads` at the top of the window&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Then click `Install` next to `Command Line Tools`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should now have the latest compilers.&lt;/p&gt;</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Use virtualenv + virtualenvwrapper with Python</title>
    <id>http://killtheyak.com/use-virtualenvwrapper</id>
    <updated>2013-07-14T10:00:00Z</updated>
    <published>2013-07-14T10:00:00Z</published>
    <link href="http://killtheyak.com/use-virtualenvwrapper" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">&lt;p&gt;Install the packages.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install virtualenv
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install virtualenvwrapper
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Open your shell's profile config (e.g. &lt;code&gt;.bash_profile&lt;/code&gt;, &lt;code&gt;.bashrc&lt;/code&gt;, or &lt;code&gt;.zshrc&lt;/code&gt;). This is usually located in your home directory.&lt;/p&gt;
&lt;p&gt;Then add the following:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# ~/.bash_profile&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Enable virtualenvwrapper &lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;VIRTUALENVWRAPPER_PYTHON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/bin/python
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;WORKON_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/Envs
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /usr/local/bin/virtualenvwrapper.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On Window, you can use the &lt;a href=&quot;https://bitbucket.org/guillermooo/virtualenvwrapper-powershell&quot;&gt;virtualenvwrapper-powershell&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# Virtualenvwrapper-powershell in Windows&lt;/span&gt;
PS&amp;gt; pip install virtualenvwrapper-powershell
PS&amp;gt; &lt;span class=&quot;nv&quot;&gt;$env&lt;/span&gt;:WORKON_HOME&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;~/Envs&amp;quot;&lt;/span&gt;
PS&amp;gt; mkdir &lt;span class=&quot;nv&quot;&gt;$env&lt;/span&gt;:WORKON_HOME
PS&amp;gt; import-module virtualenvwrapper
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create the folder for your virtual environments.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# Reload your profile&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bash_profile
&lt;span class=&quot;c&quot;&gt;# Create your env directory&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkdir -p &lt;span class=&quot;nv&quot;&gt;$WORKON_HOME&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, when you log in to a new shell session, you will be able to use virtualenvwrapper.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# Create a new environment&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkvirtualenv my-fresh-environment
&lt;span class=&quot;c&quot;&gt;# Activate an environment&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;workon my-fresh-environment
&lt;span class=&quot;c&quot;&gt;# List environments&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;lsvirtualenv
&lt;span class=&quot;c&quot;&gt;# Remove an environment&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rmvirtualenv my-polluted-environment
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;See also:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.python-guide.org/en/latest/dev/virtualenvs.html&quot;&gt;Virtual Environments - Hitchhiker's Guide to Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://virtualenvwrapper.readthedocs.org/en/latest/&quot;&gt;Virtualenvwrapper docs&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bitbucket.org/guillermooo/virtualenvwrapper-powershell&quot;&gt;Virtualenvwrapper-powershell for Windows users&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Use Celery in Django with a Redis backend</title>
    <id>http://killtheyak.com/django-celery-redis</id>
    <updated>2013-07-13T00:00:00Z</updated>
    <published>2013-07-13T00:00:00Z</published>
    <link href="http://killtheyak.com/django-celery-redis" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">&lt;p&gt;First, install redis:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# On MacOSX with homebrew&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew update
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install redis

&lt;span class=&quot;c&quot;&gt;# On Linux&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget http://download.redis.io/redis-stable.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tar xvzf redis-stable.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;redis-stable
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, add the following to your requirements file:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# requirements.txt&lt;/span&gt;
celery-with-redis
django-celery
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install the new requirements:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install -r requirements.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add the following to setup.py:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# settings.py&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;djcelery&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;djcelery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setup_loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Add djcelery to installed apps&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;djcelery&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Celery settings&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;BROKER_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CELERY_RESULT_BACKEND&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create the database datatables:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# If you&amp;#39;re using South:&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python manage.py migrate djcelery
&lt;span class=&quot;c&quot;&gt;# otherwise:&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python manage.py syncdb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now to start your redis server and a celery worker.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# Start the redis server&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;redis-server
&lt;span class=&quot;c&quot;&gt;# In a new terminal window/tab, start a celery worker&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python manage.py celeryd worker -E
&lt;span class=&quot;c&quot;&gt;# In ANOTHER terminal window/tab, enable the Django Celery monitor&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# so that you can manage your tasks from your admin page&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python manage.py celerycam
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You are now ready to run Celery tasks. &lt;/p&gt;
&lt;p&gt;Tasks can be defined like so:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# tasks.py (in one of your apps)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;celery&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# In some other file (such as in views or models)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;myapp.tasks&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Asynchronous addition--Huzzah!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;See also:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://celeryproject.org/&quot;&gt;Celery home page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.celeryproject.org/en/latest/django/first-steps-with-django.html&quot;&gt;First steps with Django - Celery Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://redis.io/&quot;&gt;Redis home page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Install Python 2 and/or 3</title>
    <id>http://killtheyak.com/install-python</id>
    <updated>2013-07-13T00:00:00Z</updated>
    <published>2013-07-13T00:00:00Z</published>
    <link href="http://killtheyak.com/install-python" />
    <author>
      <name>http://www.github.com/sloria</name>
    </author>
    <content type="html">&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# On Mac &amp;gt;= 10.5 with homebrew&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew update
&lt;span class=&quot;c&quot;&gt;## Install Python 2&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install python
&lt;span class=&quot;c&quot;&gt;## Install Python 3&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install python3
&lt;span class=&quot;c&quot;&gt;## Follow any instructions that appear after each brew install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Make sure to follow the instructions after each install. If you missed them, just run &lt;code&gt;brew info python&lt;/code&gt; or &lt;code&gt;brew info python3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If it still doesn't work, try to fix &lt;em&gt;every&lt;/em&gt; issue listed when you run &lt;code&gt;brew doctor&lt;/code&gt;. &lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# Is everything working?&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew doctor
&lt;span class=&quot;c&quot;&gt;# Listen to the doctor&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If everything's working, you can run both Python 2 and Python 3 on the same system.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# Run Python 2&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python
&lt;span class=&quot;c&quot;&gt;# Run Python 3&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python3
&lt;span class=&quot;c&quot;&gt;# Install a Python 2 package&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install some-package
&lt;span class=&quot;c&quot;&gt;# Install a Python 3 package&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip3 install some-package
&lt;/pre&gt;&lt;/div&gt;</content>
  </entry>
  <entry xml:base="http://localhost/feed/recent.atom">
    <title type="text">Install Homebrew</title>
    <id>http://killtheyak.com/install-homebrew</id>
    <updated>2013-07-13T00:00:00Z</updated>
    <published>2013-07-13T00:00:00Z</published>
    <link href="http://killtheyak.com/install-homebrew" />
    <author>
      <name>Anonymous</name>
    </author>
    <content type="html">&lt;p&gt;Works on all MacOSX &amp;gt;= 10.5.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# In your Mac Terminal, run:&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ruby -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Thats it!&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mxcl.github.io/homebrew/&quot;&gt;Homebrew&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
</feed>
